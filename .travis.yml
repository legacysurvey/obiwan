language: python
python:
- "2.7"

os:
- linux

# Default environment is Ubuntu 12.04.5 LTS "precise"
# which is pretty old.
# "trusty" is Ubuntu 14.04.5 LTS
dist: trusty

# use the newer container-based infrastructure
#sudo: false
sudo: required

# python versions to test against...
# - osx

compiler:
  - g++

cache:
  directories:
  #- $HOME/astrometry.net
  #- $HOME/tractor
  #- $HOME/dust
  #- $HOME/tmv-0.73
  #- $HOME/GalSim

# Additonal apt-get installs
addons:
  apt:
    packages:
    - graphviz
    - texlive-latex-extra
    - dvipng
    - libnetpbm10
    - libnetpbm10-dev
    - netpbm
    - wcslib-dev
    - libz-dev
    - libcfitsio3
    - libcfitsio3-dev
    - swig
    - gsl-bin
    - libgsl0-dev
    - libboost-all-dev
    - gfortran
    - liblapack-dev
    - libfftw3-dev
    - scons
    - curl
    - python-tk
    - libcairo2-dev
    - libpng12-dev
    - libjpeg-dev
    - zlib1g-dev
    - libbz2-dev

install:
  - export WCSLIB_INC="-I/usr/include/wcslib"
  - export WCSLIB_LIB="-lwcs"
  #- pip install -r requirements.txt
  - export python_exe=`which python`
  - echo python_exe=$python_exe
  - which pip
  - pip install Sphinx
  - pip install numpy
  - pip install scipy
  - pip install matplotlib
  - pip install cython
  - pip install numpydoc
  - pip install six
  - pip install astropy
  - pip install --no-deps git+https://github.com/astropy/photutils.git
  - pip install h5py
  - pip install pandas
  - pip install psycopg2
  - pip install scikit-image
  - pip install scikit-learn
  - pip install nose future pyyaml
  - pip install -U pytest
  - pip install pytest-cov coveralls
  - pip install --no-deps --upgrade git+https://github.com/esheldon/fitsio.git#egg=fitsio
  #- pip install -v --no-deps --upgrade git+https://github.com/dstndstn/tractor.git

before_script:
    - export MYCODE=$HOME/mycode
    - sudo rm -rf $HOME/astrometry.net
    - if [ ! -d "$HOME/astrometry.net" ]; then (cd $HOME && curl -SL https://github.com/dstndstn/astrometry.net/releases/download/0.72/astrometry.net-0.72.tar.gz -o astrometry.net.tar.gz && tar -xzf astrometry.net.tar.gz && mv astrometry.net-0.72 astrometry.net); fi
    - (cd $HOME/astrometry.net && make install INSTALL_DIR=$MYCODE/astrometry)
    - export PYTHONPATH=$MYCODE/astrometry/lib/python:$PYTHONPATH
    - export PATH=$MYCODE/astrometry/lib/python/astrometry/util:$PATH
    - export PATH=$MYCODE/astrometry/lib/python/astrometry/blind:$PATH
    - cd $HOME && python -c "import astrometry; print(astrometry.__file__)"
    - sudo rm -rf $HOME/tractor
    - if [ ! -d "$HOME/tractor" ]; then (cd $HOME && curl -SL https://github.com/dstndstn/tractor/archive/dr5.2.tar.gz -o tractor.tar.gz && tar -xzf tractor.tar.gz && mv tractor-dr5.2 tractor); fi
    - cd $HOME/tractor 
    - make 
    - python setup.py install --prefix=$MYCODE/tractor
    - export PYTHONPATH=$MYCODE/tractor/lib/python2.7/site-packages:$PYTHONPATH
    - cd $HOME && python -c "import tractor; print(tractor.__file__)"
    - mkdir -p $HOME/dust/maps
    - (cd $HOME/dust/maps && wget -c http://portal.nersc.gov/project/cosmo/temp/dstn/travis-ci/maps/SFD_dust_4096_ngp.fits)
    - (cd $HOME/dust/maps && wget -c http://portal.nersc.gov/project/cosmo/temp/dstn/travis-ci/maps/SFD_dust_4096_sgp.fits)
    - export DUST_DIR=$HOME/dust
    - cd $HOME
    - sudo rm -rf $HOME/tmv-0.73
    - if ! test -d tmv-0.73 || ! test -f tmv-0.73/Sconstruct; then wget https://github.com/rmjarvis/tmv/archive/v0.73.tar.gz && tar -xf v0.73.tar.gz ; else echo Using cached TMV; fi
    - cd $HOME/tmv-0.73 
    - sudo scons DEBUG=True FLAGS="-O0"
    - sudo scons install 
    - sudo rm -rf $HOME/GalSim 
    - if [ ! -d "$HOME/GalSim" ]; then (cd $HOME && wget https://github.com/GalSim-developers/GalSim/archive/v1.4.2.tar.gz -O GalSim.tar.gz && tar -xzf GalSim.tar.gz && mv GalSim-1.4.2 GalSim); fi
    - cd $HOME/GalSim
    - sudo scons PYTHON=/home/travis/virtualenv/python2.7.13/bin/python 
    - sudo scons install
    - cd $HOME && git clone https://github.com/legacysurvey/legacypipe.git
    - cd legacypipe && git checkout f4fc46ea0b
    - export PYTHONPATH=$HOME/legacypipe/py:$PYTHONPATH
    - cd $HOME && git clone https://github.com/legacysurvey/theValidator.git
    - export PYTHONPATH=$HOME/theValidator:$PYTHONPATH
    - cd $HOME && git clone https://github.com/legacysurvey/obiwan.git
    - export PYTHONPATH=$HOME/obiwan/py:$PYTHONPATH

script:
  #- cd $HOME/obiwan
  #- pytest --cov --ignore py/obiwan/test/end_to_end
  cd $HOME/obiwan/
  pytest -v --cov=tests/ --cov-config=tests/.coveragerc --ignore=tests/end_to_end tests/
  pytest -v tests/end_to_end/test_datasets.py::test_main
  # pytest -p no:warnings
  #- coverage run obiwan/test/print_test.py test

after_success:
  - coveralls
#- (cd py && coveralls debug)
#    - (cd py && coveralls)






